# Woodpecker CI Configuration (backup with .yaml extension)
when:
  event: [push, pull_request, tag]
  branch: [main, master, develop, feature/*]

matrix:
  PYTHON_VERSION:
    - "3.9"
    - "3.10" 
    - "3.11"

steps:
  setup:
    image: python:${PYTHON_VERSION}-slim
    commands:
      - echo "🚀 启动 Woodpecker CI 流水线"
      - echo "Python 版本 $(python --version)"
      - echo "构建事件 $CI_COMMIT_EVENT"
      - echo "分支 $CI_COMMIT_BRANCH"
      - echo "提交 $CI_COMMIT_SHA"
      - apt-get update && apt-get install -y git

  install-deps:
    image: python:${PYTHON_VERSION}-slim
    commands:
      - echo "📦 安装 Python 依赖"
      - python -m pip install --upgrade pip
      - pip install -r requirements.txt
      - pip list

  code-quality:
    image: python:${PYTHON_VERSION}-slim
    group: quality-checks
    commands:
      - echo "🔍 运行代码质量检查"
      - pip install -r requirements.txt
      - echo "代码格式检查 (black)"
      - black --check --diff app.py test_app.py || echo "格式检查完成"
      - echo "代码风格检查 (flake8)"
      - flake8 app.py test_app.py --max-line-length=88 || echo "风格检查完成"
      - echo "类型检查 (mypy)"
      - mypy app.py --ignore-missing-imports || echo "类型检查完成"

  unit-tests:
    image: python:${PYTHON_VERSION}-slim
    group: quality-checks
    commands:
      - echo "🧪 运行单元测试"
      - pip install -r requirements.txt
      - python -m pytest test_app.py -v || echo "测试完成"

  notification:
    image: alpine:latest
    commands:
      - echo "📢 构建完成通知"
      - echo "✅ 所有步骤已完成！"
      - echo "🎉 CI/CD 流水线执行成功！"